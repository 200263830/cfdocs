{
	"name":"Application.cfc",
	"type":"component",
	"syntax":"component { this.name=\"myApp\"; }",
	"returns":"",
	"related":["cfapplication","onapplicationstart","onapplicationend","onsessionstart","onsessionend","onrequest","onrequeststart","onrequestend","onerror","onmissingtemplate"],
	"description":"Defines application level variables and event handlers (functions invoked at various application lifecycle events).",
	"params": [
		{"name":"this.name","description":"Name of application. Up to 64 characters","required":false,"default":"","type":"String","values":[]},
		{"name":"this.loginStorage","description":"cookie: store login information in the Cookie scope.\n session: store login information in the Session scope.","required":false,"default":"cookie","type":"String","values":["cookie","session"]},
		{"name":"this.clientManagement","description":"enables client variables","required":false,"default":false,"type":"boolean","values":[true,false]},
		{"name":"this.clientStorage","description":"How client variables are stored\n * datasource_name: in ODBC or native data source.\n You must create storage repository in the\n Administrator.\n * registry: in the system registry.\n * cookie: on client computer in a cookie. Scalable.\n If client disables cookies in the browser, client\n variables do not work","required":false,"default":"registry","type":"String","values":["cookie","registry","datasource_name"]},
		{"name":"this.setClientCookies","description":"No: CFML does not automatically send CFID and CFTOKEN\n cookies to client browser; you must manually code CFID and\n CFTOKEN on the URL for every page that uses Session or\n Client variables","required":false,"default":true,"type":"boolean","values":[true,false]},
		{"name":"this.sessionManagement","description":"enables session variables","required":false,"default":false,"type":"boolean","values":[true,false]},
		{"name":"this.sessionTimeout","description":"Lifespan of session variables. CreateTimeSpan function and\n values in days, hours, minutes, and seconds, separated by\n commas","required":false,"default":"","type":"Timespan","values":[]},
		{"name":"this.applicationTimeout","description":"Lifespan of application variables. CreateTimeSpan function\n and values in days, hours, minutes, and seconds, separated\n by commas.","required":false,"default":"","type":"Timespan","values":[]},
		{"name":"this.setDomainCookies","description":"Yes: Sets CFID and CFTOKEN cookies for a domain (not a host)\n Required, for applications running on clusters.","required":false,"default":false,"type":"boolean","values":[true,false]},
        {"name":"this.scriptProtect","description":"Specifies whether to attempt to protect variables from cross-site scripting attacks.\n - none: do not protect variables\n - all: protect Form, URL, CGI, and Cookie variables\n - comma-delimited list of ColdFusion scopes: protect variables in the specified scopes","required":false,"default":"","type":"String","values":["none","all","form","url","cookie","cgi","form,url","form,url,cookie","form,url,cookie,cgi"]},

        {"name":"this.secureJSONPrefix","description":"CF8+ The security prefix to put in front of the value that a ColdFusion function returns in JSON-format \n\t\t\t\tin response to a remote call if the secureJSON setting is true.","required":false,"default":"","type":"String","values":[true,false]},
		{"name":"this.secureJSON","description":"CF8+ A Boolean value that specifies whether to add a security prefix in front of any value that a ColdFusion function returns in JSON-format\n\t\t\t\t in response to a remote call.","required":false,"default":"","type":"Boolean","values":[true,false]},
        {"name":"this.customTagPaths","description":"CF8+ A file path to a directory containing custom tags.","required":false,"default":"","type":"String","values":[]},
        {"name":"this.mappings","description":"CF8+ A structure of application mappings where they key is the mapping and the value is the directory path.","required":false,"default":"","type":"Struct","values":[]},

        {"name":"this.serverSideFormValidation","description":"CF9+ Enable\/Disable ColdFusionâ€š server side validation on CFFORM.","required":false,"default":"","type":"Boolean","values":[true,false]},
        {"name":"this.googleMapKey","description":"CF9+ the google maps api when cfmap is used.","required":false,"default":"","type":"String","values":[]},
        {"name":"this.datasource","description":"CF9+ Defines the default datasource for the application. As of CF9.0.1+ it can also accept a struct with keys: name, username, password.","required":false,"default":"","type":"String","values":[]},
        {"name":"this.s3","description":"CF9+ A struct with keys accessKeyId, awsSecretKey and defaultLocation.","required":false,"default":"","type":"String","values":[]},

        {"name":"this.sessioncookie.httpOnly","description":"CF10+ Specifies if the session cookies (CFID/CFTOKEN) should have the HTTPOnly cookie flag set. This prevents the cookie value from being read from JavaScript.","required":false,"default":"true","type":"boolean","values":[]},
        {"name":"this.sessioncookie.secure","description":"CF10+ Specifies if the session cookies (CFID/CFTOKEN) should have the secure cookie flag set. When true the cookies are only sent over a secure transport (eg HTTPS).","required":false,"default":"false","type":"boolean","values":[]},
        {"name":"this.sessioncookie.domain","description":"CF10+ Specifies the cookie domain the session cookies (CFID/CFTOKEN).","required":false,"default":"false","type":"string","values":[]},
        {"name":"this.sessioncookie.timeout","description":"CF10+ Specifies the expires value of the session cookies (CFID/CFTOKEN), in days. Set to -1 for browser session cookies.","required":false,"default":"30 years","type":"string","values":[]},
        {"name":"this.sessioncookie.disableUpdate","description":"CF10+ Prevents the session cookies (CFID/CFTOKEN), from being updated by cfcookie or cfheader tags.","required":false,"default":"false","type":"boolean","values":[]},
        {"name":"this.javaSettings.loadPaths","description":"CF10+ An array of paths containing jar files or java classes.","required":false,"default":"","type":"array","values":[]},
        {"name":"this.javaSettings.loadColdFusionClassPath","description":"CF10+ Loads the classes using ColdFusions classloader.","required":false,"default":"false","type":"boolean","values":[]},
        {"name":"this.javaSettings.reloadOnChange","description":"CF10+ Watches the files specified in loadPaths and reloads classes on change.","required":false,"default":"false","type":"boolean","values":[]},

        {"name":"this.compileExtForInclude","description":"CF11+ When cfinclude is invoked only file extensions in this list are compiled and executed as CFML, otherwise they are statically included as a string for improved performance and security. You can use * as a wildcard for all.","required":false,"default":"cfm,cfml","type":"boolean","values":[]},
        {"name":"this.security.antiSamyPolicy","description":"CF11+ Path to an AntiSamy XML policy file for use with isSafeHTML and getSafeHTML functions.","required":false,"default":"","type":"String","values":[]},
        {"name":"this.strictNumberValidation","description":"CF11+ Makes isValid, cfargument, cfparam, and cfform more strict with reguard to how the treat integer or numeric validation when the string contains a currency.","required":false,"default":"true","type":"boolean","values":[]},
        {"name":"this.inMemoryFileSystem.enabled","description":"CF11+ Enables or disables in memory file system.","required":false,"default":"","type":"boolean","values":[]},
        {"name":"this.inMemoryFileSystem.size","description":"CF11+ Memory limit in MB for the in memory file system.","required":false,"default":"","type":"numeric","values":[]},
        {"name":"this.datasources","description":"CF11+ Create multiple an application specific datasources. This value is a structure whos keys are the name of the datasource to be created, and the values are another structure with keys such as: database, driver, host, username, password, url","required":false,"default":"","type":"struct","values":[]}

	],
	"engines": {
		"coldfusion": {"minimum_version":"7", "notes":"", "docs":"https://wikidocs.adobe.com/wiki/display/coldfusionen/Application.CFC+Reference"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"http://docs.lucee.org/reference/tags/application.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/tag/cfapplication"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/tag/cfapplication"}
	},
	"links": [
        {
            "title":"Learn CF in a Week: Application.cfc",
            "description":"Tutorial showing how to use Application.cfc",
            "url":"http://www.learncfinaweek.com/week1/Application_cfc/"
        }
	],
    "examples": [
        {
            "title":"Simple Application.cfc Example",
            "description":"A very basic script example",
            "code" : "component {\n    this.name = \"AppName\";\n    this.datasource = \"AppDataSource\";\n    this.sessionManagement = true;\n\n    function onApplicationStart() {\n        application.config=\"xyz\";\n    }\n\n }",
            "result":""
        },
        {
            "title":"Adding relative mappings in Application.cfc",
            "description":"This example uses getCurrentTemplatePath and getDirectoryFromPath to dynamically get the directory that the current Application.cfc resieds in and then defines some mappings relative to that. You want to avoid using expandPath in Application.cfc because the path will be relative to the current template path not the Application.cfc path.",
            "code": "component {\n    this.name = \"AppName\";\n    this.appBasePath = getDirectoryFromPath(getCurrentTemplatePath());\n    this.mappings[\"/components\"] = this.appBasePath & \"components\";\n    this.mappings[\"/frameworks\"] = this.appBasePath & \"frameworks\";\n\n}",
            "result":""
        }
    ]

}
